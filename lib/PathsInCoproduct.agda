{-# OPTIONS --without-K #-}
module PathsInCoproduct where

open import Type
open import Functions
open import DependentSum
open import Coproduct
open import Paths
open import Homotopies
open import Equivalences
open import Zero
open import One


module _ {‚Ñì‚ÇÅ ‚Ñì‚ÇÇ} {X : Type ‚Ñì‚ÇÅ} {Y : Type ‚Ñì‚ÇÇ} {x‚ÇÄ : X} where

  i‚ÇÅ=code : X + Y ‚Üí Type ‚Ñì‚ÇÅ
  i‚ÇÅ=code (i‚ÇÅ x) = x‚ÇÄ == x
  i‚ÇÅ=code (i‚ÇÇ y) = ùüò'

  i‚ÇÅ= : {u : X + Y} ‚Üí i‚ÇÅ=code u ‚Üí (i‚ÇÅ x‚ÇÄ == u)
  i‚ÇÅ= {(i‚ÇÅ x)} = Œª p ‚Üí ap i‚ÇÅ p
  i‚ÇÅ= {(i‚ÇÇ y)} ()

  i‚ÇÅ=-e : {u : X + Y} ‚Üí (i‚ÇÅ x‚ÇÄ == u) ‚Üí i‚ÇÅ=code u
  i‚ÇÅ=-e = ind=l (Œª {u} p ‚Üí i‚ÇÅ=code u) (refl x‚ÇÄ)

  i‚ÇÅ=-Œ≤ : {u : X + Y} ‚Üí i‚ÇÅ=-e {u} ‚àò i‚ÇÅ= {u} ‚àº id
  i‚ÇÅ=-Œ≤ {(i‚ÇÅ x)} = ind=l (Œª {x} p ‚Üí i‚ÇÅ=-e {(i‚ÇÅ x)} (i‚ÇÅ= {(i‚ÇÅ x)} p) == p)
                        (refl (refl x‚ÇÄ))
  i‚ÇÅ=-Œ≤ {(i‚ÇÇ y)} ()

  i‚ÇÅ=-Œ∑ : {u : X + Y} ‚Üí i‚ÇÅ= {u} ‚àò i‚ÇÅ=-e {u} ‚àº id
  i‚ÇÅ=-Œ∑ = ind=l (Œª {u} p ‚Üí i‚ÇÅ= {u} (i‚ÇÅ=-e {u} p) == p)
                (refl (refl (i‚ÇÅ x‚ÇÄ)))

  i‚ÇÅ=-œÑ : {u : X + Y} ‚Üí ap (i‚ÇÅ=-e {u}) ‚àò i‚ÇÅ=-Œ∑ {u} ‚àº i‚ÇÅ=-Œ≤ {u} ‚àò i‚ÇÅ=-e {u}
  i‚ÇÅ=-œÑ = ind=l (Œª {u} p ‚Üí (ap (i‚ÇÅ=-e {u}) ‚àò i‚ÇÅ=-Œ∑ {u}) p == (i‚ÇÅ=-Œ≤ {u} ‚àò i‚ÇÅ=-e {u}) p)
                (refl (refl (refl x‚ÇÄ)))
  
  paths-in-+‚ÇÅ : (u : X + Y) ‚Üí (i‚ÇÅ x‚ÇÄ == u) ‚âÉ i‚ÇÅ=code u
  paths-in-+‚ÇÅ u = i‚ÇÅ=-e {u} , i‚ÇÅ= {u} , i‚ÇÅ=-Œ∑ {u} , i‚ÇÅ=-Œ≤ {u} , i‚ÇÅ=-œÑ {u}


module _ {‚Ñì‚ÇÅ ‚Ñì‚ÇÇ} {X : Type ‚Ñì‚ÇÅ} {Y : Type ‚Ñì‚ÇÇ} {y‚ÇÄ : Y} where

  i‚ÇÇ=code : X + Y ‚Üí Type ‚Ñì‚ÇÇ
  i‚ÇÇ=code (i‚ÇÅ x) = ùüò'
  i‚ÇÇ=code (i‚ÇÇ y) = y‚ÇÄ == y

  i‚ÇÇ= : {u : X + Y} ‚Üí i‚ÇÇ=code u ‚Üí (i‚ÇÇ y‚ÇÄ == u)
  i‚ÇÇ= {(i‚ÇÅ x)} ()
  i‚ÇÇ= {(i‚ÇÇ y)} = Œª p ‚Üí ap i‚ÇÇ p

  i‚ÇÇ=-e : {u : X + Y} ‚Üí (i‚ÇÇ y‚ÇÄ == u) ‚Üí i‚ÇÇ=code u
  i‚ÇÇ=-e = ind=l (Œª {u} p ‚Üí i‚ÇÇ=code u) (refl y‚ÇÄ)

  i‚ÇÇ=-Œ≤ : {u : X + Y} ‚Üí i‚ÇÇ=-e {u} ‚àò i‚ÇÇ= {u} ‚àº id
  i‚ÇÇ=-Œ≤ {(i‚ÇÅ x)} ()
  i‚ÇÇ=-Œ≤ {(i‚ÇÇ y)} = ind=l (Œª {y} p ‚Üí i‚ÇÇ=-e {(i‚ÇÇ y)} (i‚ÇÇ= {(i‚ÇÇ y)} p) == p)
                         (refl (refl y‚ÇÄ))

  i‚ÇÇ=-Œ∑ : {u : X + Y} ‚Üí i‚ÇÇ= {u} ‚àò i‚ÇÇ=-e {u} ‚àº id
  i‚ÇÇ=-Œ∑ = ind=l (Œª {u} p ‚Üí i‚ÇÇ= {u} (i‚ÇÇ=-e {u} p) == p)
                (refl (refl (i‚ÇÇ y‚ÇÄ)))

  i‚ÇÇ=-œÑ : {u : X + Y} ‚Üí ap (i‚ÇÇ=-e {u}) ‚àò i‚ÇÇ=-Œ∑ {u} ‚àº i‚ÇÇ=-Œ≤ {u} ‚àò i‚ÇÇ=-e {u}
  i‚ÇÇ=-œÑ = ind=l (Œª {u} p ‚Üí (ap (i‚ÇÇ=-e {u}) ‚àò i‚ÇÇ=-Œ∑ {u}) p == (i‚ÇÇ=-Œ≤ {u} ‚àò i‚ÇÇ=-e {u}) p)
                (refl (refl (refl y‚ÇÄ)))
  
  paths-in-+‚ÇÇ : (u : X + Y) ‚Üí (i‚ÇÇ y‚ÇÄ == u) ‚âÉ i‚ÇÇ=code u
  paths-in-+‚ÇÇ u = i‚ÇÇ=-e {u} , i‚ÇÇ= {u} , i‚ÇÇ=-Œ∑ {u} , i‚ÇÇ=-Œ≤ {u} , i‚ÇÇ=-œÑ {u}
